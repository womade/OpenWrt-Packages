#!/bin/sh /etc/rc.common
# SPDX-License-Identifier: GPL-2.0-only
#
# Copyright (C) 2022-2023 ImmortalWrt.org

USE_PROCD=1

START=99
STOP=10

CONF="homeproxy"
PROG="/usr/bin/sing-box"

HP_DIR="/etc/homeproxy"
RUN_DIR="/var/run/homeproxy"
LOG_PATH="$RUN_DIR/homeproxy.log"
DNSMASQ_DIR="/tmp/dnsmasq.d"

FW4="$(command -v fw4)"

log() {
	echo -e "$(date "+%Y-%m-%d %H:%M:%S") [DAEMON] $*" >> "$LOG_PATH"
}

setup_server_firewall() {
	local cfg="$1"

	local enabled
	config_get_bool enabled "$cfg" "enabled"
	[ "$enabled" = "1" ] || return 1

	local port network
	config_get port "$cfg" "port"
	config_get network "$cfg" "network"

	json_add_object ""
	json_add_string type "rule"
	json_add_string name "Allow-access-$CONF-$cfg-on-$port"
	json_add_string src "*"
	json_add_string dest_port "$port"
	[ -z "$network" ] || json_add_string proto "$network"
	json_add_string target "ACCEPT"
	json_close_object
}

start_service() {
	config_load "$CONF"

	local routing_mode
	config_get routing_mode "config" "routing_mode" "bypass_mainland_china"

	local outbound_node
	if [ "$routing_mode" != "custom" ]; then
		config_get outbound_node "config" "main_node" "nil"
	else
		config_get outbound_node "routing" "default_outbound" "nil"
	fi

	local server_enabled
	config_get_bool server_enabled "server" "enabled" "0"

	if [ "$outbound_node" = "nil" ] && [ "$server_enabled" = "0" ]; then
		return 1
	fi

	mkdir -p "$RUN_DIR"
	"$HP_DIR"/scripts/generate_sing-box.lua 2>>"$LOG_PATH"

	local inbounds="$(jsonfilter -i "$RUN_DIR/sing-box.json" -e "@.inbounds[@.tag!='dns-in']" 2>"/dev/null")"
	if [ ! -e "$RUN_DIR/sing-box.json" ]; then
		log "Error: failed to generate configuration."
		exit 1
	elif [ -z "$inbounds" ]; then
		log "Error: no valid inbound found."
		exit 1
	elif ! "$PROG" check --config "$RUN_DIR/sing-box.json" 2>>"$LOG_PATH"; then
		log "Error: wrong configuration detected."
		exit 1
	fi

	if [ "$outbound_node" != "nil" ]; then
		# Auto update
		local auto_update auto_update_time
		config_get_bool auto_update "subscription" "auto_update" "0"
		if [ "auto_update" = "1" ]; then
			config_get auto_update_time "subscription" "auto_update_time" "2"
			echo "0 ${auto_update_time} * * * $HP_DIR/scripts/update_geodata.sh update_version update_subscription" >> "/etc/crontabs/root"
		fi
		# Clean log
		echo -e "*/3 * * * * $HP_DIR/scripts/clean_log.sh" >> "/etc/crontabs/root"
		/etc/init.d/cron restart

		# Hijack DNS
		local dns_port
		config_get dns_port "infra" "dns_port" "5333"
		mkdir -p "$DNSMASQ_DIR"
		cat <<-EOF >> "$DNSMASQ_DIR/dnsmasq-homeproxy.conf"
			no-poll
			no-resolv
			server=127.0.0.1#$dns_port
		EOF
		/etc/init.d/dnsmasq restart >"/dev/null" 2>&1

		# Setup firewall
		local table_mark
		config_get table_mark "infra" "table_mark" "100"
		if [ "$routing_mode" != "custom" ]; then
			local outbound_udp_node
			config_get outbound_udp_node "config" "main_udp_node" "nil"
			if [ "$outbound_udp_node" != "nil" ]; then
				local tproxy_mark
				config_get tproxy_mark "infra" "tproxy_mark" "101"

				ip rule add fwmark "$tproxy_mark" table "$table_mark"
				ip route add local 0.0.0.0/0 dev lo table "$table_mark"

				ip -6 rule add fwmark "$tproxy_mark" table "$table_mark"
				ip -6 route add local ::/0 dev lo table "$table_mark"
			fi
		else
			local tun_name tun_mark
			config_get tun_name "infra" "tun_name" "singtun0"
			config_get tun_mark "infra" "tun_mark" "102"

			ip tuntap add mode tun user root name "$tun_name"
			ip link set "$tun_name" up

			ip route replace default dev "$tun_name" table "$table_mark"
			ip rule add fwmark "$tun_mark" lookup "$table_mark"

			ip -6 route replace default dev "$tun_name" table "$table_mark"
			ip -6 rule add fwmark "$tun_mark" lookup "$table_mark"
		fi

		# TODO: add support for iptables based fw3
		if [ -n "$FW4" ]; then
			utpl -S "$HP_DIR/scripts/firewall_nftables.ut" > "$RUN_DIR/fw4.nft"
		fi
	fi

	procd_open_instance "sing-box"

	procd_set_param command "$PROG"
	procd_append_param command run --config "$RUN_DIR/sing-box.json"

	procd_set_param limits core="unlimited"
	procd_set_param limits nofile="1000000 1000000"
	procd_set_param stderr 1
	procd_set_param respawn

	# Setup firewall
	local firewall_configured
	if [ "$outbound_node" != "nil" ]; then
		firewall_configured=1
		procd_open_data

		json_add_array firewall
		json_add_object ""
		json_add_string type "rule"
		json_add_string name "Allow-Forward-HomeProxy-TUN"
		json_add_string src "*"
		json_add_string dest "*"
		json_add_string direction "out"
		json_add_string device "$tun_name"
		json_add_string proto "all"
		json_add_string target "ACCEPT"
		json_close_object
	fi
	local server_auto_firewall
	config_get_bool server_auto_firewall "server" "auto_firewall" "0"
	if [ "$server_auto_firewall" = "1" ]; then
		[ -n "$firewall_configured" ] || {
			firewall_configured=1
			procd_open_data
			json_add_array firewall
		}
		config_foreach setup_server_firewall "server"
	fi
	[ -z "$firewall_configured" ] || {
		json_close_array
		procd_close_data
	}

	procd_close_instance

	echo > "$RUN_DIR/sing-box.log"
	log "$(sing-box version | awk 'NR==1{print $1,$3}') started."
}

service_started() {
	procd_set_config_changed firewall
}

service_stopped() {
	sed -i "/$CONF/d" "/etc/crontabs/root" 2>"/dev/null"
	/etc/init.d/cron restart >"/dev/null" 2>&1

	# Setup firewall
	config_load "$CONF"
	local table_mark tproxy_mark tun_mark tun_name
	config_get table_mark "infra" "table_mark" "100"
	config_get tproxy_mark "infra" "tproxy_mark" "101"
	config_get tun_mark "infra" "tun_mark" "102"
	config_get tun_name "infra" "tun_name" "singtun0"

	# Tproxy
	ip rule del fwmark "$tproxy_mark" table "$table_mark" 2>"/dev/null"
	ip route del local 0.0.0.0/0 dev lo table "$table_mark" 2>"/dev/null"
	ip -6 rule del fwmark "$tproxy_mark" table "$table_mark" 2>"/dev/null"
	ip -6 route del local ::/0 dev lo table "$table_mark" 2>"/dev/null"

	# TUN
	ip link set "$tun_name" down 2>"/dev/null"
	ip tuntap del mode tun name "$tun_name" 2>"/dev/null"

	ip route del default dev "$tun_name" table "$table_mark" 2>"/dev/null"
	ip rule del fwmark "$tun_mark" table "$table_mark" 2>"/dev/null"

	ip -6 route del default dev "$tun_name" table "$table_mark" 2>"/dev/null"
	ip -6 rule del fwmark "$tun_mark" table "$table_mark" 2>"/dev/null"
	# TODO: add support for iptables based fw3
	if [ -n "$FW4" ]; then
		for i in "homeproxy_outredir" "homeproxy_redirect" "homeproxy_mangle"; do
			nft flush chain inet fw4 "$i" 2>"/dev/null"
			nft delete chain inet fw4 "$i" 2>"/dev/null"
		done
		for i in "homeproxy_localaddr_v4" "homeproxy_localaddr_v6"; do
			nft flush set inet fw4 "$i" 2>"/dev/null"
			nft delete set inet fw4 "$i" 2>"/dev/null"
		done

		echo > "$RUN_DIR/fw4.nft"
	fi
	procd_set_config_changed firewall

	# Remove DNS hijack
	rm -f "$DNSMASQ_DIR/dnsmasq-homeproxy.conf"
	/etc/init.d/dnsmasq restart >"/dev/null" 2>&1

	rm -f "$RUN_DIR/sing-box.json" "$RUN_DIR/sing-box.log"

	log "Service stopped."
}

reload_service() {
	log "Reloading service..."

	stop
	start
}

service_triggers() {
	procd_add_reload_trigger "$CONF"
}
