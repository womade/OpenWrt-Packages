#!/bin/sh /etc/rc.common
# SPDX-License-Identifier: GPL-2.0-only
#
# Copyright (C) 2022-2023 ImmortalWrt.org

USE_PROCD=1

START=99
STOP=10

CONF="homeproxy"
PROG="/usr/bin/sing-box"

HP_DIR="/etc/homeproxy"
RUN_DIR="/var/run/homeproxy"
LOG_PATH="$RUN_DIR/homeproxy.log"
DNSMASQ_DIR="/tmp/dnsmasq.d/dnsmasq-homeproxy.d"

log() {
	echo -e "$(date "+%Y-%m-%d %H:%M:%S") [DAEMON] $*" >> "$LOG_PATH"
}

start_service() {
	config_load "$CONF"

	local routing_mode
	config_get routing_mode "config" "routing_mode" "bypass_mainland_china"

	local outbound_node
	if [ "$routing_mode" != "custom" ]; then
		config_get outbound_node "config" "main_node" "nil"
	else
		config_get outbound_node "routing" "default_outbound" "nil"
	fi

	local server_enabled
	config_get_bool server_enabled "server" "enabled" "0"

	if [ "$outbound_node" = "nil" ] && [ "$server_enabled" = "0" ]; then
		return 1
	fi

	mkdir -p "$RUN_DIR"
	"$HP_DIR"/scripts/generate_sing-box.lua 2>>"$LOG_PATH"

	local inbounds="$(jsonfilter -i "$RUN_DIR/sing-box.json" -e "@.inbounds[@.tag!='dns-in']" 2>"/dev/null")"
	if [ ! -e "$RUN_DIR/sing-box.json" ]; then
		log "Error: failed to generate configuration."
		exit 1
	elif [ -z "$inbounds" ]; then
		log "Error: no valid inbound found."
		exit 1
	elif ! "$PROG" check --config "$RUN_DIR/sing-box.json" 2>>"$LOG_PATH"; then
		log "Error: wrong configuration detected."
		exit 1
	fi

	if [ "$outbound_node" != "nil" ]; then
		# Auto update
		local auto_update auto_update_time
		config_get_bool auto_update "subscription" "auto_update" "0"
		if [ "auto_update" = "1" ]; then
			config_get auto_update_time "subscription" "auto_update_time" "2"
			echo "0 ${auto_update_time} * * * $HP_DIR/scripts/update_geodata.sh update_version update_subscription" >> "/etc/crontabs/root"
		fi
		/etc/init.d/cron restart

		# DNSMasq rules
		local dns_port
		config_get dns_port "infra" "dns_port" "5333"
		mkdir -p "$DNSMASQ_DIR"
		echo -e "conf-dir=$DNSMASQ_DIR" > "$DNSMASQ_DIR/../dnsmasq-homeproxy.conf"
		if [ "$routing_mode" = "gfwlist" ]; then
			sed -r -e "s/(.*)/server=\/\1\/127.0.0.1#$dns_port\nnftset=\/\1\\/4#inet#fw4#homeproxy_gfwlist_v4,6#inet#fw4#homeproxy_gfwlist_v6/g" \
				"$HP_DIR/resources/gfw_list.txt" > "$DNSMASQ_DIR/gfw_list.conf"
		elif [ "$routing_mode" = "bypass_mainland_china" ]; then
			sed -r -e "s/(.*)/server=\/\1\/127.0.0.1#$dns_port/g" \
				"$HP_DIR/resources/gfw_list.txt" > "$DNSMASQ_DIR/gfw_list.conf"
		elif [ "$routing_mode" = "proxy_mainland_china" ]; then
			sed -r -e "s/full://g" -e "/:/d" -e "s/(.*)/server=\/\1\/127.0.0.1#$dns_port/g" \
				"$HP_DIR/resources/china_list.txt" > "$DNSMASQ_DIR/china_list.conf"
		else
			cat <<-EOF >> "$DNSMASQ_DIR/redirect-dns.conf"
				no-poll
				no-resolv
				server=127.0.0.1#$dns_port
			EOF
		fi
		/etc/init.d/dnsmasq restart >"/dev/null" 2>&1

		# Setup firewall
		local table_mark
		config_get table_mark "infra" "table_mark" "100"
		if [ "$routing_mode" != "custom" ]; then
			local outbound_udp_node
			config_get outbound_udp_node "config" "main_udp_node" "nil"
			if [ "$outbound_udp_node" != "nil" ]; then
				local tproxy_mark
				config_get tproxy_mark "infra" "tproxy_mark" "101"

				ip rule add fwmark "$tproxy_mark" table "$table_mark"
				ip route add local 0.0.0.0/0 dev lo table "$table_mark"

				ip -6 rule add fwmark "$tproxy_mark" table "$table_mark"
				ip -6 route add local ::/0 dev lo table "$table_mark"
			fi
		else
			local tun_name tun_mark
			config_get tun_name "infra" "tun_name" "singtun0"
			config_get tun_mark "infra" "tun_mark" "102"

			ip tuntap add mode tun user root name "$tun_name"
			ip link set "$tun_name" up

			ip route replace default dev "$tun_name" table "$table_mark"
			ip rule add fwmark "$tun_mark" lookup "$table_mark"

			ip -6 route replace default dev "$tun_name" table "$table_mark"
			ip -6 rule add fwmark "$tun_mark" lookup "$table_mark"
		fi

		utpl -S "$HP_DIR/scripts/firewall_post.ut" > "$RUN_DIR/fw4_post.nft"

	fi

	utpl -S "$HP_DIR/scripts/firewall_pre.ut" > "$RUN_DIR/fw4_pre.nft"
	fw4 reload >"/dev/null" 2>&1

	procd_open_instance "sing-box"

	procd_set_param command "$PROG"
	procd_append_param command run --config "$RUN_DIR/sing-box.json"

	procd_set_param limits core="unlimited"
	procd_set_param limits nofile="1000000 1000000"
	procd_set_param stderr 1
	procd_set_param respawn

	procd_close_instance

	procd_open_instance "log-cleaner"
	procd_set_param command "$HP_DIR/scripts/clean_log.sh"
	procd_set_param respawn
	procd_close_instance

	echo > "$RUN_DIR/sing-box.log"
	log "$(sing-box version | awk 'NR==1{print $1,$3}') started."
}

service_started() {
	procd_set_config_changed firewall
}

service_stopped() {
	sed -i "/$CONF/d" "/etc/crontabs/root" 2>"/dev/null"
	/etc/init.d/cron restart >"/dev/null" 2>&1

	# Setup firewall
	# Load config
	config_load "$CONF"
	local table_mark tproxy_mark tun_mark tun_name
	config_get table_mark "infra" "table_mark" "100"
	config_get tproxy_mark "infra" "tproxy_mark" "101"
	config_get tun_mark "infra" "tun_mark" "102"
	config_get tun_name "infra" "tun_name" "singtun0"

	# Tproxy
	ip rule del fwmark "$tproxy_mark" table "$table_mark" 2>"/dev/null"
	ip route del local 0.0.0.0/0 dev lo table "$table_mark" 2>"/dev/null"
	ip -6 rule del fwmark "$tproxy_mark" table "$table_mark" 2>"/dev/null"
	ip -6 route del local ::/0 dev lo table "$table_mark" 2>"/dev/null"

	# TUN
	ip link set "$tun_name" down 2>"/dev/null"
	ip tuntap del mode tun name "$tun_name" 2>"/dev/null"

	ip route del default dev "$tun_name" table "$table_mark" 2>"/dev/null"
	ip rule del fwmark "$tun_mark" table "$table_mark" 2>"/dev/null"

	ip -6 route del default dev "$tun_name" table "$table_mark" 2>"/dev/null"
	ip -6 rule del fwmark "$tun_mark" table "$table_mark" 2>"/dev/null"

	# Nftables rules
	for i in "homeproxy_outredir" "homeproxy_redirect" "homeproxy_mangle"; do
		nft flush chain inet fw4 "$i" 2>"/dev/null"
	done
	for i in "homeproxy_outredir" "homeproxy_redirect" "homeproxy_mangle"; do
		nft delete chain inet fw4 "$i" 2>"/dev/null"
	done
	for i in "homeproxy_localaddr_v4" "homeproxy_localaddr_v6"; do
		nft flush set inet fw4 "$i" 2>"/dev/null"
		nft delete set inet fw4 "$i" 2>"/dev/null"
	done
	for i in "homeproxy_gfwlist_v4" "homeproxy_gfwlist_v6"; do
		nft flush set inet fw4 "$i" 2>"/dev/null"
		nft delete set inet fw4 "$i" 2>"/dev/null"
	done
	for i in "homeproxy_gfwlist_v4" "homeproxy_gfwlist_v6"; do
		nft flush set inet fw4 "$i" 2>"/dev/null"
		nft delete set inet fw4 "$i" 2>"/dev/null"
	done
	echo > "$RUN_DIR/fw4_pre.nft"
	echo > "$RUN_DIR/fw4_post.nft"
	fw4 reload >"/dev/null" 2>&1

	# Remove DNS hijack
	rm -rf "$DNSMASQ_DIR/../dnsmasq-homeproxy.conf" "$DNSMASQ_DIR"
	/etc/init.d/dnsmasq restart >"/dev/null" 2>&1

	rm -f "$RUN_DIR/sing-box.json" "$RUN_DIR/sing-box.log"

	log "Service stopped."
}

reload_service() {
	log "Reloading service..."

	stop
	start
}

service_triggers() {
	procd_add_reload_trigger "$CONF"
}
