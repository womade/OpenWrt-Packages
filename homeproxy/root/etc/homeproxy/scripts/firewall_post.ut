#!/usr/bin/utpl -S

{%-
import { readfile } from 'fs';
import { cursor } from 'uci';

function array_to_nftstr(array) {
	if (type(array) !== 'array')
		return array;

	return join(', ', array);
}

/* Misc config */
const resources_dir = '/etc/homeproxy/resources';

/* UCI config start */
const cfgname = 'homeproxy';
const uci = cursor();
uci.load(cfgname);

const routing_mode = uci.get(cfgname, 'config', 'routing_mode') || 'bypass_mainland_china';
let outbound_node, outbound_udp_node, routing_port,
    self_mark, redirect_port, tproxy_port, tproxy_mark,
    ipv6_support, listen_interfaces, tun_name, tun_mark;

const control_options = [ "lan_proxy_mode",
	"lan_direct_mac_addrs", "lan_direct_ipv4_ips", "lan_direct_ipv6_ips",
	"lan_proxy_mac_addrs", "lan_proxy_ipv4_ips", "lan_proxy_ipv6_ips",
	"lan_gaming_mode_mac_addrs", "lan_gaming_mode_ipv4_ips", "lan_gaming_mode_ipv6_ips",
	"lan_global_proxy_mac_addrs", "lan_global_proxy_ipv4_ips", "lan_global_proxy_ipv6_ips",
	"wan_proxy_ipv4_ips", "wan_proxy_ipv6_ips", "wan_direct_ipv4_ips", "wan_direct_ipv6_ips" ];
let control_info = {};

if (routing_mode !== 'custom') {
	outbound_node = uci.get(cfgname, 'config', 'main_node') || 'nil';
	if (outbound_node !== 'nil') {
		self_mark = uci.get(cfgname, 'infra', 'self_mark') || '100';
		redirect_port = uci.get(cfgname, 'infra', 'redirect_port') || '5331';

		outbound_udp_node = uci.get(cfgname, 'config', 'main_udp_node') || 'nil';
		if (outbound_udp_node !== 'nil') {
			tproxy_port = uci.get(cfgname, 'infra', 'tproxy_port') || '5332';
			tproxy_mark = uci.get(cfgname, 'infra', 'tproxy_mark') || '101';
		}
	}

	routing_port = uci.get(cfgname, 'config', 'routing_port') || 'common';
	if (routing_port === 'common')
		routing_port = uci.get(cfgname, 'infra', 'common_port') || '22,53,80,143,443,465,587,853,993,995,8080,8443,9418';

	ipv6_support = uci.get(cfgname, 'config', 'ipv6_support') || '0';
	listen_interfaces = uci.get(cfgname, 'control', 'listen_interfaces');
	for (let i in control_options)
		control_info[i] = uci.get(cfgname, 'control', i);
} else {
	tun_name = uci.get(cfgname, 'infra', 'tun_name') || 'singtun0';
	tun_mark = uci.get(cfgname, 'infra', 'tun_mark') || '102';
	outbound_node = uci.get(cfgname, 'routing', 'default_outbound') || 'nil';
}
/* UCI config end */
-%}

{# Reserved addresses -#}
set homeproxy_localaddr_v4 {
	type ipv4_addr
	flags interval
	auto-merge
	elements = {
		0.0.0.0/8,
		10.0.0.0/8,
		100.64.0.0/10,
		127.0.0.0/8,
		169.254.0.0/16,
		172.16.0.0/12,
		192.0.0.0/24,
		192.0.2.0/24,
		192.31.196.0/24,
		192.52.193.0/24,
		192.88.99.0/24,
		192.168.0.0/16,
		192.175.48.0/24,
		198.18.0.0/15,
		198.51.100.0/24,
		203.0.113.0/24,
		224.0.0.0/4,
		240.0.0.0/4
	}
}
{% if (routing_mode === 'custom' || ipv6_support === '1'): %}
set homeproxy_localaddr_v6 {
	type ipv6_addr
	flags interval
	auto-merge
	elements = {
		::/128,
		::1/128,
		::ffff:0:0/96,
		100::/64,
		64:ff9b::/96,
		2001::/32,
		2001:10::/28,
		2001:20::/28,
		2001:db8::/28,
		2002::/16,
		fc00::/7,
		fe80::/10,
		ff00::/8
	}
}
{% endif %}

{% if (routing_mode === 'gfwlist'): %}
set homeproxy_gfwlist_v4 {
	type ipv4_addr
	flags interval
	auto-merge
}
{% if (ipv6_support === '1'): %}
set homeproxy_gfwlist_v6 {
	type ipv6_addr
	flags interval
	auto-merge
}
{% endif %}
{% elif (routing_mode in ['bypass_mainland_china', 'proxy_mainland_china']): %}
set homeproxy_mainland_addr_v4 {
	type ipv4_addr
	flags interval
	auto-merge
	elements = {
		{% for (let cnip4 in split(trim(readfile(resources_dir + '/china_ip4.txt')), '\n')): %}
		{{ cnip4 }},
		{% endfor %}
	}
}
{% if (ipv6_support === '1'): %}
set homeproxy_mainland_addr_v6 {
	type ipv6_addr
	flags interval
	auto-merge
	elements = {
		{% for (let cnip6 in split(trim(readfile(resources_dir + '/china_ip6.txt')), '\n')): %}
		{{ cnip6 }},
		{% endfor %}
	}
}
{% endif %}
{% endif %}

{% if (routing_mode !== 'custom'): %}
set homeproxy_proxy_addr_v4 {
	type ipv4_addr
	flags interval
	auto-merge
}

{% if (ipv6_support === '1'): %}
set homeproxy_proxy_addr_v6 {
	type ipv6_addr
	flags interval
	auto-merge
}
{% endif %}
{% endif %}

{% if (routing_mode !== 'custom'): %}
{# Regular mode -#}
{# TCP redirect -#}
chain homeproxy_redirect {
	meta mark {{ self_mark }} counter return

	{% if (routing_port !== 'all'): %}
	tcp dport != { {{ routing_port }} } counter return
	{% endif %}

	{% if (control_info['lan_proxy_mode'] === 'listed_only'): %}
	{% if (control_info['lan_proxy_mac_addrs']): %}
	ether saddr != { {{ array_to_nftstr(control_info['lan_proxy_mac_addrs']) }} } counter return
	{% endif %}
	{% if (control_info['lan_proxy_ipv4_ips']): %}
	ip saddr != { {{ array_to_nftstr(control_info['lan_proxy_ipv4_ips']) }} } counter return
	{% endif %}
	{% if (ipv6_support === '1' && control_info['lan_proxy_ipv6_ips']): %}
	ip6 saddr != { {{ array_to_nftstr(control_info['lan_proxy_ipv6_ips']) }} } counter return
	{% endif %}
	{% elif (control_info['lan_proxy_mode'] === 'except_listed'): %}
	{% if (control_info['lan_direct_mac_addrs']): %}
	ether saddr { {{ array_to_nftstr(control_info['lan_direct_mac_addrs']) }} } counter return
	{% endif %}
	{% if (control_info['lan_proxy_ipv4_ips']): %}
	ip saddr { {{ array_to_nftstr(control_info['lan_direct_ipv4_ips']) }} } counter return
	{% endif %}
	{% if (ipv6_support === '1' && control_info['lan_direct_ipv6_ips']): %}
	ip6 saddr { {{ array_to_nftstr(control_info['lan_direct_ipv6_ips']) }} } counter return
	{% endif %}
	{% endif %}

	{% if (control_info['wan_proxy_ipv4_ips']): %}
	ip daddr { {{ array_to_nftstr(control_info['wan_proxy_ipv4_ips']) }} } meta l4proto tcp counter redirect to :{{ redirect_port }}
	{% endif %}
	{% if (ipv6_support === '1' && control_info['wan_proxy_ipv6_ips']): %}
	ip6 daddr { {{ array_to_nftstr(control_info['wan_proxy_ipv6_ips']) }} } meta l4proto tcp counter redirect to :{{ redirect_port }}
	{% endif %}

	ip daddr @homeproxy_proxy_addr_v4 meta l4proto tcp counter redirect to :{{ redirect_port }}
	{% if (ipv6_support === '1'): %}
	ip6 daddr @homeproxy_proxy_addr_v6 meta l4proto tcp counter redirect to :{{ redirect_port }}
	{% endif %}

	ip daddr @homeproxy_localaddr_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr @homeproxy_localaddr_v6 counter return
	{% endif %}

	{% if (control_info['lan_global_proxy_mac_addrs']): %}
	ether saddr { {{ array_to_nftstr(control_info['lan_global_proxy_mac_addrs']) }} } meta l4proto tcp counter redirect to :{{ redirect_port }}
	{% endif %}
	{% if (control_info['lan_global_proxy_ipv4_ips']): %}
	ip saddr { {{ array_to_nftstr(control_info['lan_global_proxy_ipv4_ips']) }} } meta l4proto tcp counter redirect to :{{ redirect_port }}
	{% endif %}
	{% if (ipv6_support === '1' && control_info['lan_global_proxy_ipv6_ips']): %}
	ip6 saddr { {{ array_to_nftstr(control_info['lan_global_proxy_ipv6_ips']) }} } meta l4proto tcp counter redirect to :{{ redirect_port }}
	{% endif %}

	{% if (control_info['wan_direct_ipv4_ips']): %}
	ip daddr { {{ array_to_nftstr(control_info['wan_direct_ipv4_ips']) }} } counter return
	{% endif %}
	{% if (ipv6_support === '1' && control_info['wan_direct_ipv6_ips']): %}
	ip6 daddr { {{ array_to_nftstr(control_info['wan_direct_ipv6_ips']) }} } counter return
	{% endif %}

	{% if (routing_mode === 'gfwlist'): %}
	ip daddr != @homeproxy_gfwlist_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr != @homeproxy_gfwlist_v6 counter return
	{% endif %}
	{% elif (routing_mode === 'bypass_mainland_china'): %}
	ip daddr @homeproxy_mainland_addr_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr @homeproxy_mainland_addr_v6 counter return
	{% endif %}
	{% elif (routing_mode === 'proxy_mainland_china'): %}
	ip daddr != @homeproxy_mainland_addr_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr != @homeproxy_mainland_addr_v6 counter return
	{% endif %}
	{% endif %}

	meta l4proto tcp counter redirect to :{{ redirect_port }}
}

chain homeproxy_dstnat_redir {
	{% if (listen_interfaces): %}
	meta iifname != { {{ array_to_nftstr(listen_interfaces) }} } counter return
	{% endif %}

	meta l4proto tcp jump homeproxy_redirect
}

chain homeproxy_output_redir {
	type nat hook output priority filter -105; policy accept
	meta nfproto { {{ (ipv6_support === '1') ? 'ipv4, ipv6' : 'ipv4' }} } meta l4proto tcp jump homeproxy_redirect
}

chain dstnat {
	meta nfproto { {{ (ipv6_support === '1') ? 'ipv4, ipv6' : 'ipv4' }} } meta l4proto tcp jump homeproxy_dstnat_redir
}
{% if (outbound_udp_node !== 'nil'): %}
{# UDP tproxy #}
chain homeproxy_mangle_prerouting {
	{% if (listen_interfaces): %}
	meta iifname != { {{ array_to_nftstr(listen_interfaces) }}, lo } counter return
	{% endif %}

	meta mark {{ self_mark }} counter return

	{% if (control_info['lan_proxy_mode'] === 'listed_only'): %}
	{% if (control_info['lan_proxy_mac_addrs']): %}
	ether saddr != { {{ array_to_nftstr(control_info['lan_proxy_mac_addrs']) }} } counter return
	{% endif %}
	{% if (control_info['lan_proxy_ipv4_ips']): %}
	ip saddr != { {{ array_to_nftstr(control_info['lan_proxy_ipv4_ips']) }} } counter return
	{% endif %}
	{% if (ipv6_support === '1' && control_info['lan_proxy_ipv6_ips']): %}
	ip6 saddr != { {{ array_to_nftstr(control_info['lan_proxy_ipv6_ips']) }} } counter return
	{% endif %}
	{% elif (control_info['lan_proxy_mode'] === 'except_listed'): %}
	{% if (control_info['lan_direct_mac_addrs']): %}
	ether saddr { {{ array_to_nftstr(control_info['lan_direct_mac_addrs']) }} } counter return
	{% endif %}
	{% if (control_info['lan_proxy_ipv4_ips']): %}
	ip saddr { {{ array_to_nftstr(control_info['lan_direct_ipv4_ips']) }} } counter return
	{% endif %}
	{% if (ipv6_support === '1' && control_info['lan_direct_ipv6_ips']): %}
	ip6 saddr { {{ array_to_nftstr(control_info['lan_direct_ipv6_ips']) }} } counter return
	{% endif %}
	{% endif %}

	{% if (control_info['wan_proxy_ipv4_ips']): %}
	ip daddr { {{ array_to_nftstr(control_info['wan_proxy_ipv4_ips']) }} } meta l4proto udp mark set {{ tproxy_mark }} tproxy ip to 127.0.0.1:{{ tproxy_port }} counter accept
	{% endif %}
	{% if (ipv6_support === '1' && control_info['wan_proxy_ipv6_ips']): %}
	ip6 daddr { {{ array_to_nftstr(control_info['wan_proxy_ipv6_ips']) }} } meta l4proto udp mark set {{ tproxy_mark }} tproxy ip6 to [::1]:{{ tproxy_port }} counter accept
	{% endif %}

	ip daddr @homeproxy_proxy_addr_v4 meta l4proto udp mark set {{ tproxy_mark }} tproxy ip to 127.0.0.1:{{ tproxy_port }} counter accept
	{% if (ipv6_support === '1'): %}
	ip6 daddr @homeproxy_proxy_addr_v6 meta l4proto udp mark set {{ tproxy_mark }} tproxy ip6 to [::1]:{{ tproxy_port }} counter accept
	{% endif %}

	ip daddr @homeproxy_localaddr_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr @homeproxy_localaddr_v6 counter return
	{% endif %}

	{% if (control_info['lan_global_proxy_mac_addrs']): %}
	ether saddr { {{ array_to_nftstr(control_info['lan_global_proxy_mac_addrs']) }} } meta l4proto udp mark set {{ tproxy_mark }} tproxy ip to 127.0.0.1:{{ tproxy_port }} counter accept
	ether saddr { {{ array_to_nftstr(control_info['lan_global_proxy_mac_addrs']) }} } meta l4proto udp mark set {{ tproxy_mark }} tproxy ip6 to [::]:{{ tproxy_port }} counter accept
	{% endif %}
	{% if (control_info['lan_global_proxy_ipv4_ips']): %}
	ip saddr { {{ array_to_nftstr(control_info['lan_global_proxy_ipv4_ips']) }} } meta l4proto udp mark set {{ tproxy_mark }} tproxy ip to 127.0.0.1:{{ tproxy_port }} counter accept
	{% endif %}
	{% if (ipv6_support === '1' && control_info['lan_global_proxy_ipv6_ips']): %}
	ip6 saddr { {{ array_to_nftstr(control_info['lan_global_proxy_ipv6_ips']) }} } meta l4proto udp mark set {{ tproxy_mark }} tproxy ip6 to [::1]:{{ tproxy_port }} counter accept
	{% endif %}

	{% if (control_info['wan_direct_ipv4_ips']): %}
	ip daddr { {{ array_to_nftstr(control_info['wan_direct_ipv4_ips']) }} } counter return
	{% endif %}
	{% if (ipv6_support === '1' && control_info['wan_direct_ipv6_ips']): %}
	ip6 daddr { {{ array_to_nftstr(control_info['wan_direct_ipv6_ips']) }} } counter return
	{% endif %}

	{% if (routing_mode === 'gfwlist'): %}
	ip daddr != @homeproxy_gfwlist_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr != @homeproxy_gfwlist_v6 counter return
	udp dport { 80, 443 } counter reject comment "!{{ cfgname }}: Fuck you QUIC"
	{% endif %}
	{% elif (routing_mode === 'bypass_mainland_china'): %}
	ip daddr @homeproxy_mainland_addr_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr @homeproxy_mainland_addr_v6 counter return
	udp dport { 80, 443 } counter reject comment "!{{ cfgname }}: Fuck you QUIC"
	{% endif %}
	{% elif (routing_mode === 'proxy_mainland_china'): %}
	ip daddr != @homeproxy_mainland_addr_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr != @homeproxy_mainland_addr_v6 counter return
	{% endif %}
	{% endif %}

	{% if (control_info['lan_gaming_mode_mac_addrs']): %}
	ether saddr { {{ array_to_nftstr(control_info['lan_gaming_mode_mac_addrs']) }} } meta l4proto udp mark set {{ tproxy_mark }} tproxy ip to 127.0.0.1:{{ tproxy_port }} counter accept
	ether saddr { {{ array_to_nftstr(control_info['lan_gaming_mode_mac_addrs']) }} } meta l4proto udp mark set {{ tproxy_mark }} tproxy ip6 to [::]:{{ tproxy_port }} counter accept
	{% endif %}
	{% if (control_info['lan_gaming_mode_ipv4_ips']): %}
	ip saddr { {{ array_to_nftstr(control_info['lan_gaming_mode_ipv4_ips']) }} } meta l4proto udp mark set {{ tproxy_mark }} tproxy ip to 127.0.0.1:{{ tproxy_port }} counter accept
	{% endif %}
	{% if (ipv6_support === '1' && control_info['lan_gaming_mode_ipv6_ips']): %}
	ip6 saddr { {{ array_to_nftstr(control_info['lan_gaming_mode_ipv6_ips']) }} } meta l4proto udp mark set {{ tproxy_mark }} tproxy ip6 to [::1]:{{ tproxy_port }} counter accept
	{% endif %}

	{% if (routing_port !== 'all'): %}
	udp dport != { {{ routing_port }} } counter return
	{% endif %}

	meta l4proto udp mark set {{ tproxy_mark }} tproxy ip to 127.0.0.1:{{ tproxy_port }} counter accept
	{% if (ipv6_support === '1'): %}
	meta l4proto udp mark set {{ tproxy_mark }} tproxy ip6 to [::1]:{{ tproxy_port }} counter accept
	{% endif %}
}

chain homeproxy_mangle_output {
	meta mark {{ self_mark }} counter return

	{% if (routing_port !== 'all'): %}
	udp dport != { {{ routing_port }} } counter return
	{% endif %}

	{% if (control_info['wan_proxy_ipv4_ips']): %}
	ip daddr { {{ array_to_nftstr(control_info['wan_proxy_ipv4_ips']) }} } meta l4proto udp mark set {{ tproxy_mark }} counter accept
	{% endif %}
	{% if (ipv6_support === '1' && control_info['wan_proxy_ipv6_ips']): %}
	ip6 daddr { {{ array_to_nftstr(control_info['wan_proxy_ipv6_ips']) }} } meta l4proto udp mark set {{ tproxy_mark }} counter accept
	{% endif %}

	ip daddr @homeproxy_proxy_addr_v4 meta l4proto udp mark set {{ tproxy_mark }} counter accept
	{% if (ipv6_support === '1'): %}
	ip6 daddr @homeproxy_proxy_addr_v6 meta l4proto udp mark set {{ tproxy_mark }} counter accept
	{% endif %}

	ip daddr @homeproxy_localaddr_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr @homeproxy_localaddr_v6 counter return
	{% endif %}

	{% if (control_info['wan_direct_ipv4_ips']): %}
	ip daddr { {{ array_to_nftstr(control_info['wan_direct_ipv4_ips']) }} } counter return
	{% endif %}
	{% if (ipv6_support === '1' && control_info['wan_direct_ipv6_ips']): %}
	ip6 daddr { {{ array_to_nftstr(control_info['wan_direct_ipv6_ips']) }} } counter return
	{% endif %}

	{% if (routing_mode === 'gfwlist'): %}
	ip daddr != @homeproxy_gfwlist_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr != @homeproxy_gfwlist_v6 counter return
	{% endif %}
	{% elif (routing_mode === 'bypass_mainland_china'): %}
	ip daddr @homeproxy_mainland_addr_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr @homeproxy_mainland_addr_v6 counter return
	{% endif %}
	{% elif (routing_mode === 'proxy_mainland_china'): %}
	ip daddr != @homeproxy_mainland_addr_v4 counter return
	{% if (ipv6_support === '1'): %}
	ip6 daddr != @homeproxy_mainland_addr_v6 counter return
	{% endif %}
	{% endif %}

	meta l4proto udp mark set {{ tproxy_mark }} counter accept
}

chain mangle_prerouting {
	meta nfproto { {{ (ipv6_support === '1') ? 'ipv4, ipv6' : 'ipv4' }} } meta l4proto udp jump homeproxy_mangle_prerouting
}

chain mangle_output {
	meta nfproto { {{ (ipv6_support === '1') ? 'ipv4, ipv6' : 'ipv4' }} } meta l4proto udp jump homeproxy_mangle_output
}
{% endif %}
{% else %}
{# TUN mode -#}
chain homeproxy_mangle {
	meta l4proto { tcp, udp } iifname {{ tun_name }} counter return
	ip daddr @homeproxy_localaddr_v4 counter return
	ip6 daddr @homeproxy_localaddr_v6 counter return
	meta l4proto { tcp, udp } counter mark set {{ tun_mark }}
}

chain mangle_prerouting {
	meta nfproto { ipv4, ipv6 } jump homeproxy_mangle
}

chain mangle_output {
	meta nfproto { ipv4, ipv6 } jump homeproxy_mangle
}
{% endif %}
